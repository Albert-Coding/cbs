#!/bin/sh

function fail() {
	echo "aborting... $*"
	exit
}

[ -z "${CLUSTER_HOST}" ] && export CLUSTER_HOST="{{hostname}}"
[ -z "${IMAGE_ROOT}" ] && export IMAGE_ROOT="{{imageroot}}"
[ -z "${PROCESSES}" ] && export PROCESSES="{{process}}"
[ -z "${CLUSTER_HOST}" ] && fail "missing CLUSTER_HOST environment variable"
[ -z "${CLUSTER_ID}" ] && fail "missing CLUSTER_ID environment variable"
[ -z "${PROCESSES}" ] && fail "missing PROCESSES environment variable"

SIZECMD="fail NO SIZECMD: "
[ $(uname) == 'Linux' ] && SIZECMD="stat -c %s"
[ $(uname) == 'Darwin' ] && SIZECMD="stat -f %z"

# add hydra bin dir to path so processes can inherit
export PATH=${PATH}:${HYDRA_IMAGE}/bin

# check for HYDRA home. if exists, ensure it was created by this script
[ -d "${HYDRA_IMAGE}" ] && [ ! -d "${HYDRA_IMAGE}/.bootmagic" ] && fail "${HYDRA_IMAGE} directory not created by this script"

# create required directories
for dir in .bootmagic bin lib log etc/pid; do
	dir=${HYDRA_IMAGE}/${dir}
	[ ! -d ${dir} ] && mkdir -p ${dir} && echo "created ${dir}"
done

function fetch() {
    local=$1
    remote=$2
	sizecheck=${3:0}
    tmp=$(mktemp /tmp/curl-XXXXXX)
    curl -f -s "${remote}?ifnotsize=${sizecheck}" > "${tmp}" && (
        mv "${tmp}" "${local}"
        echo "loaded"
    ) || (
        rm "${tmp}"
        echo "skipped"
    )
}

# check for updates to required images
for image in {{images}}; do
	local=${HYDRA_IMAGE}/${image}
	remote=${IMAGE_ROOT}/${image}
	[ ! -f ${local} ] && (
		echo -n "fetching $image... "
		fetch "${local}" "${remote}"
	) || (
	    filesize=$(eval $SIZECMD $local)
		echo -n "verifying $image [$filesize]... "
		fetch "${local}" "${remote}" ${filesize}
	)
done

# unzip web directory
(
	cd $HYDRA_IMAGE
	[ -f web.zip ] && [ ! -d web ] && unzip web.zip
)

# install command line helper
HCL=${HYDRA_IMAGE}/bin/hcl
curl -s "http://${HYDRA_BOOT}/render/hcl?cluster=${CLUSTER_ID}&hostname=${CLUSTER_HOST}" > ${HCL} && chmod +x ${HCL} || fail "failed hcl load"

# launch host local processes
for proc in ${PROCESSES}; do
	echo -n "fetching ${proc} start... "
	bash <(curl -s "http://${HYDRA_BOOT}/render/start-${proc}?cluster=${CLUSTER_ID}&hostname=${CLUSTER_HOST}")
done

